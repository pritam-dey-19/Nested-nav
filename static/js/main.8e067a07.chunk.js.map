{"version":3,"sources":["reducers.js","components/Navitem.js","containers/NavItem.js","components/Nav.js","components/Breadcrumbs.js","containers/Breadcrumbs.js","components/App.js","containers/App.js","index.js"],"names":["ADD_ROOT_CHANNEL","ADD_CHANNEL","ADD_BREADCRUMB","REMOVE_BREADCRUMB","TOGGLE_BREADCRUMB","createReducer","initialState","handlers","state","action","hasOwnProperty","type","rootChannels","id","channel","channels","breadcrumbs","rootChannelId","activeChildren","includes","filter","activeId","console","log","removeBreadcrumb","addBreadcrumb","Navitem","this","props","isActive","onClick","name","children","className","map","child","NavItem","Component","NavItemContainer","connect","dispatch","toggleBreadcrumb","Nav","items","Breadcrumbs","Object","keys","join","BreadcrumbsContainer","reduce","acc","namedBreadcrumbs","App","AppContainer","defaultData","store","createStore","combineReducers","window","devToolsExtension","ReactDOM","render","document","getElementById"],"mappings":"mQAAaA,EAAmB,mBAEnBC,EAAc,cACdC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAoB,oBA2BjC,SAASC,EAAcC,EAAcC,GACnC,OAAO,WAAgD,IAA/BC,EAA8B,uDAAtBF,EAAcG,EAAQ,uCACpD,OAAIF,EAASG,eAAeD,EAAOE,MAC1BJ,EAASE,EAAOE,MAAMH,EAAOC,GAE7BD,GAKN,IAAMI,EAAeP,EAdI,IAcS,mBACtCL,GAAmB,SAACQ,EAAD,OAAqBK,EAArB,EAAUC,QAAWD,GAArB,4BAAoCL,GAApC,CAA2CK,OADxB,cAzCN,uBA2CV,iBAAM,MAFU,IAK5BE,EAAWV,EAlBI,GAkBS,eAClCJ,GAAc,SAACO,EAAD,OAAUM,EAAV,EAAUA,QAAV,mBAAC,eACXN,GADU,eAEPM,EAAQD,GAAKC,QAIVE,EAAcX,EAxBI,IAwBS,mBACrCH,GADqC,SACrBM,EADqB,GACuB,IAAnCS,EAAkC,EAAlCA,cAA0BJ,EAAQ,EAAnBC,QAAWD,GAC5CK,EAAiBV,EAAMS,IAAkB,GAE/C,OAAIC,EAAeC,SAASN,GACnBL,EAGF,2BACFA,GADL,kBAEGS,EAFH,sBAEuBC,GAFvB,CAEuCL,SAVH,cAarCV,GAbqC,SAalBK,EAbkB,GAa0B,IAAnCS,EAAkC,EAAlCA,cAA0BJ,EAAQ,EAAnBC,QAAWD,GAC/CK,EAAiBV,EAAMS,IAAkB,GAE/C,GAAIJ,IAAOI,EAAe,CACQT,EAAvBK,GACT,OADA,YAAgCL,EAAhC,CAASK,GAAT,UAIF,OAAO,2BACFL,GADL,kBAEGS,EAAgBC,EAAeE,QAAO,SAACC,GAAD,OAAcA,IAAaR,UAvBhC,cA0BrCT,GA1BqC,SA0BlBI,EA1BkB,GA0B0B,IAAnCS,EAAkC,EAAlCA,cAA0BJ,EAAQ,EAAnBC,QAAWD,GAErD,OADAS,QAAQC,IAAIf,EAAOS,EAAeJ,GAC9BL,EAAME,eAAeG,GAChBG,EAAYR,EA7DO,SAACS,EAAeH,GAAhB,MAA6B,CAC3DH,KAAMR,EACNc,gBACAH,WA0D8BU,CAAiBP,EAAe,CAAEJ,QAEvDG,EAAYR,EApEM,SAACS,EAAeH,GAAhB,MAA6B,CACxDH,KAAMT,EACNe,gBACAH,WAiE4BW,CAAcR,EAAe,CAAEJ,WA/BrB,I,2CClDnBa,E,4JACnB,WACE,MAMIC,KAAKC,MALPX,EADF,EACEA,cACAY,EAFF,EAEEA,SACAC,EAHF,EAGEA,QACAhB,EAJF,EAIEA,QAJF,IAKEA,QAAWiB,EALb,EAKaA,KAAMC,EALnB,EAKmBA,SAEbC,EAAYJ,EACd,2BACA,sBAEJ,OACE,gCACE,oBACEI,UAAW,YACXH,QAAS,kBAAMA,EAAQb,EAAeH,IAFxC,SAIGiB,IAEH,oBAAIE,UAAWA,EAAf,SACGD,GACCA,EAASE,KAAI,SAACC,GAAD,OACX,cAACC,EAAD,CACEvB,GAAIsB,EAEJlB,cAAeA,GADVkB,e,GA1BgBE,aCUtBC,EADUC,aATD,SAAC,EAAD,OAAGxB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAiBH,EAA9B,EAA8BA,GAA9B,MAAwC,CAC9DC,QAASC,EAASF,GAClBgB,SAAUb,EAAYN,eAAeG,OAGZ,SAAC2B,GAAD,MAAe,CACxCV,QAAS,SAACb,EAAeH,GAAhB,OACP0B,EFC4B,SAACvB,EAAeH,GAAhB,MAA6B,CAC3DH,KAAMP,EACNa,gBACAH,WEJW2B,CAAiBxB,EAAeH,QAEpByB,CAA6CH,GCTjDM,E,4JACnB,WACE,IAAQC,EAAUhB,KAAKC,MAAfe,MACR,OACE,qBAAKV,UAAW,MAAhB,SACGU,GACCA,EAAMT,KAAI,SAACrB,GAAD,OACR,cAACuB,EAAD,CAAkBvB,GAAIA,EAAaI,cAAeJ,GAAnBA,Y,GAPVwB,aCMlBO,EARK,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAH,OAClB,qBAAKV,UAAU,cAAf,SACGY,OAAOC,KAAKH,GAAOT,KAAI,SAACrB,GAAD,OACtB,6BAAK8B,EAAM9B,GAAIkC,KAAK,eCKXC,EADcT,aANL,SAAC,GAAD,IAAGxB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAb,MAAgC,CACtD2B,MAAOE,OAAOC,KAAK9B,GAAaiC,QAAO,SAACC,EAAKrC,GAC3C,IAAMsC,EAAmBnC,EAAYH,GAAIqB,KAAI,SAACrB,GAAD,OAAQE,EAASF,GAAIkB,QAClE,OAAO,2BAAKmB,GAAZ,kBAAkBrC,EAAKsC,MACtB,OAEwBZ,CAAyBK,GCJhDQ,E,4JACJ,WACE,IAAQxC,EAAiBe,KAAKC,MAAtBhB,aACR,OACE,sBAAKqB,UAAU,MAAf,UACE,cAAC,EAAD,CAAKU,MAAO/B,IACZ,cAAC,EAAD,W,GANUyB,aAYHe,ICTAC,EADMd,aAJG,SAAC,GAAD,MAAiC,CACvD3B,aADsB,EAAGA,aAEzBG,SAFsB,EAAiBA,YAIpBwB,CAAyBa,GCsBxCE,G,MAAc,CAClB1C,aAJuB,CAAC,IAAK,IAAK,KAKlCG,SAvBmB,CACnB,EAAG,CAAEF,GAAI,IAAKkB,KAAM,QAASC,SAAU,CAAC,IAAK,IAAK,IAAK,MACvD,EAAG,CAAEnB,GAAI,IAAKkB,KAAM,SAAUC,SAAU,CAAC,IAAK,IAAK,KAAM,OACzD,EAAG,CAAEnB,GAAI,IAAKkB,KAAM,SAAUC,SAAU,CAAC,KAAM,KAAM,OACrD,EAAG,CAAEnB,GAAI,IAAKkB,KAAM,YAAaC,SAAU,CAAC,KAAM,OAClD,EAAG,CAAEnB,GAAI,IAAKkB,KAAM,4BACpB,EAAG,CAAElB,GAAI,IAAKkB,KAAM,mBACpB,EAAG,CAAElB,GAAI,IAAKkB,KAAM,YACpB,EAAG,CAAElB,GAAI,IAAKkB,KAAM,WACpB,EAAG,CAAElB,GAAI,IAAKkB,KAAM,YACpB,GAAI,CAAElB,GAAI,KAAMkB,KAAM,UACtB,GAAI,CAAElB,GAAI,KAAMkB,KAAM,YACtB,GAAI,CAAElB,GAAI,KAAMkB,KAAM,UACtB,GAAI,CAAElB,GAAI,KAAMkB,KAAM,SACtB,GAAI,CAAElB,GAAI,KAAMkB,KAAM,WACtB,GAAI,CAAElB,GAAI,KAAMkB,KAAM,uCACtB,GAAI,CAAElB,GAAI,KAAMkB,KAAM,qCAQtBf,YALsB,KAOlBuC,EAAQC,YACZC,YAAgB,CAAE7C,eAAcG,WAAUC,gBAC1CsC,EACAI,OAAOC,mBAAqBD,OAAOC,qBAGrCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.8e067a07.chunk.js","sourcesContent":["export const ADD_ROOT_CHANNEL = \"ADD_ROOT_CHANNEL\";\r\nexport const RESET_ROOT_CHANNELS = \"RESET_ROOT_CHANNELS\";\r\nexport const ADD_CHANNEL = \"ADD_CHANNEL\";\r\nexport const ADD_BREADCRUMB = \"ADD_BREADCRUMB\";\r\nexport const REMOVE_BREADCRUMB = \"REMOVE_BREADCRUMB\";\r\nexport const TOGGLE_BREADCRUMB = \"TOGGLE_BREADCRUMB\";\r\n\r\nexport const addRootChannel = (channel) => ({\r\n  type: ADD_ROOT_CHANNEL,\r\n  channel,\r\n});\r\nexport const addChannel = (channel) => ({ type: ADD_CHANNEL, channel });\r\nexport const toggleBreadcrumb = (rootChannelId, channel) => ({\r\n  type: TOGGLE_BREADCRUMB,\r\n  rootChannelId,\r\n  channel,\r\n});\r\nexport const addBreadcrumb = (rootChannelId, channel) => ({\r\n  type: ADD_BREADCRUMB,\r\n  rootChannelId,\r\n  channel,\r\n});\r\nexport const removeBreadcrumb = (rootChannelId, channel) => ({\r\n  type: REMOVE_BREADCRUMB,\r\n  rootChannelId,\r\n  channel,\r\n});\r\n\r\nconst defaultRootChannelState = [];\r\nconst defaultChannelState = {};\r\nconst defaultBreadcrumbState = {};\r\n\r\nfunction createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    } else {\r\n      return state;\r\n    }\r\n  };\r\n}\r\n\r\nexport const rootChannels = createReducer(defaultRootChannelState, {\r\n  [ADD_ROOT_CHANNEL]: (state, { channel: { id } }) => [...state, id],\r\n  [RESET_ROOT_CHANNELS]: () => [],\r\n});\r\n\r\nexport const channels = createReducer(defaultChannelState, {\r\n  [ADD_CHANNEL]: (state, { channel }) => ({\r\n    ...state,\r\n    ...{ [channel.id]: channel },\r\n  }),\r\n});\r\n\r\nexport const breadcrumbs = createReducer(defaultBreadcrumbState, {\r\n  [ADD_BREADCRUMB](state, { rootChannelId, channel: { id } }) {\r\n    const activeChildren = state[rootChannelId] || [];\r\n\r\n    if (activeChildren.includes(id)) {\r\n      return state;\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      [rootChannelId]: [...activeChildren, id],\r\n    };\r\n  },\r\n  [REMOVE_BREADCRUMB](state, { rootChannelId, channel: { id } }) {\r\n    const activeChildren = state[rootChannelId] || [];\r\n\r\n    if (id === rootChannelId) {\r\n      const { [id]: omit, ...rest } = state;\r\n      return rest;\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      [rootChannelId]: activeChildren.filter((activeId) => activeId !== id),\r\n    };\r\n  },\r\n  [TOGGLE_BREADCRUMB](state, { rootChannelId, channel: { id } }) {\r\n    console.log(state, rootChannelId, id);\r\n    if (state.hasOwnProperty(id)) {\r\n      return breadcrumbs(state, removeBreadcrumb(rootChannelId, { id }));\r\n    }\r\n    return breadcrumbs(state, addBreadcrumb(rootChannelId, { id }));\r\n  },\r\n});\r\n","import React, { Component } from \"react\";\r\nimport NavItemContainer from \"../containers/NavItem\";\r\nimport \"../App.css\";\r\n\r\nexport default class Navitem extends Component {\r\n  render() {\r\n    const {\r\n      rootChannelId,\r\n      isActive,\r\n      onClick,\r\n      channel,\r\n      channel: { name, children },\r\n    } = this.props;\r\n    const className = isActive\r\n      ? \"nav__item__children show\"\r\n      : \"nav__item__children\";\r\n\r\n    return (\r\n      <div>\r\n        <li\r\n          className={\"nav__item\"}\r\n          onClick={() => onClick(rootChannelId, channel)}\r\n        >\r\n          {name}\r\n        </li>\r\n        <ul className={className}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <NavItemContainer\r\n                id={child}\r\n                key={child}\r\n                rootChannelId={rootChannelId}\r\n              />\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport NavItem from \"../components/Navitem\";\r\nimport { toggleBreadcrumb } from \"../reducers\";\r\n\r\nconst mapStateToProps = ({ channels, breadcrumbs }, { id }) => ({\r\n  channel: channels[id],\r\n  isActive: breadcrumbs.hasOwnProperty(id),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onClick: (rootChannelId, channel) =>\r\n    dispatch(toggleBreadcrumb(rootChannelId, channel)),\r\n});\r\nconst NavItemContainer = connect(mapStateToProps, mapDispatchToProps)(NavItem);\r\nexport default NavItemContainer;\r\n","import React, { Component } from \"react\";\r\nimport NavItemContainer from \"../containers/NavItem\";\r\nimport \"../App.css\";\r\n\r\nexport default class Nav extends Component {\r\n  render() {\r\n    const { items } = this.props;\r\n    return (\r\n      <nav className={\"nav\"}>\r\n        {items &&\r\n          items.map((id) => (\r\n            <NavItemContainer id={id} key={id} rootChannelId={id} />\r\n          ))}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Breadcrumbs = ({ items }) => (\r\n  <div className=\"breadcrumbs\">\r\n    {Object.keys(items).map((id) => (\r\n      <h1>{items[id].join(\" / \")}</h1>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Breadcrumbs;\r\n","import { connect } from \"react-redux\";\r\nimport Breadcrumbs from \"../components/Breadcrumbs\";\r\n\r\nconst mapStateToProps = ({ channels, breadcrumbs }) => ({\r\n  items: Object.keys(breadcrumbs).reduce((acc, id) => {\r\n    const namedBreadcrumbs = breadcrumbs[id].map((id) => channels[id].name);\r\n    return { ...acc, [id]: namedBreadcrumbs };\r\n  }, {}),\r\n});\r\nconst BreadcrumbsContainer = connect(mapStateToProps)(Breadcrumbs);\r\nexport default BreadcrumbsContainer;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport BreadcrumbsContainer from \"../containers/Breadcrumbs\";\r\nimport \"../App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { rootChannels } = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Nav items={rootChannels} />\r\n        <BreadcrumbsContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from \"react-redux\";\r\nimport App from \"../components/App\";\r\n\r\nconst mapStateToProps = ({ rootChannels, channels }) => ({\r\n  rootChannels,\r\n  channels,\r\n});\r\nconst AppContainer = connect(mapStateToProps)(App);\r\nexport default AppContainer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers } from \"redux\";\nimport { rootChannels, channels, breadcrumbs } from \"./reducers\";\nimport AppContainer from \"./containers/App\";\nimport \"./index.css\";\n\nconst channelsData = {\n  1: { id: \"1\", name: \"Films\", children: [\"4\", \"5\", \"6\", \"7\"] },\n  2: { id: \"2\", name: \"Sports\", children: [\"8\", \"9\", \"10\", \"11\"] },\n  3: { id: \"3\", name: \"Places\", children: [\"12\", \"13\", \"14\"] },\n  4: { id: \"4\", name: \"Star Wars\", children: [\"15\", \"16\"] },\n  5: { id: \"5\", name: \"The Shawshank Redemption\" },\n  6: { id: \"6\", name: \"The Dark KNight\" },\n  7: { id: \"7\", name: \"Parasite\" },\n  8: { id: \"8\", name: \"Cricket\" },\n  9: { id: \"9\", name: \"Football\" },\n  10: { id: \"10\", name: \"Hockey\" },\n  11: { id: \"11\", name: \"BAseball\" },\n  12: { id: \"12\", name: \"London\" },\n  13: { id: \"13\", name: \"Paris\" },\n  14: { id: \"14\", name: \"KOlkata\" },\n  15: { id: \"15\", name: \"Episode V - The empire strikes back\" },\n  16: { id: \"16\", name: \"Episode III -Revenge of the sith\" },\n};\nconst rootChannelsData = [\"1\", \"2\", \"3\"];\nconst breadcrumbsData = {};\n\nconst defaultData = {\n  rootChannels: rootChannelsData,\n  channels: channelsData,\n  breadcrumbs: breadcrumbsData,\n};\nconst store = createStore(\n  combineReducers({ rootChannels, channels, breadcrumbs }),\n  defaultData,\n  window.devToolsExtension && window.devToolsExtension()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}